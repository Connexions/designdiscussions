<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml">  <head>    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />    <title>Authoring Services Design</title>    <style type="text/css">#red-note {  color: red;}</style></head>  <body>    <h1>Authoring Services Design</h1>    <p><b id="red-note">NOTE: The mockups in this document are to display        possible functionality, not how the site will actually look.  They are        crude whiteboard or Libre Office drawings.  The actual site will look        much different and much more polished.</b><br />    </p>    <h2>Overview<br />    </h2>    <img src="images/authoring-services-design.png" alt="Authoring Services Design Daigram" /><br />    <br />    Authoring Services has the following Components<br />    <br />    <h3>Editor</h3>    <p>The editor is a JavaScript-based editor that has the following      requirements</p>    <ul>      <li>Be as WYSIWYG as possible</li>      <li>Elements that cannot be totally WYSIWYG should have property panels        that open for additional information.  For example, a rough drawing of        how a panel for a List might look.</li>    </ul>    <p><img src="images/editor-panel.png" alt="Editor Panel Drawing" /><br />    </p>    <ul>      <li>Math Editing</li>      <ul>        <li>Support will be provided for editing math as</li>        <ul>          <li>LaTeX</li>          <li>MathML</li>          <li>ASCIIMath??<br />          </li>        </ul>        <li>Math imported via the LaTeX importer will remain in LaTeX for          editing</li>        <ul>          <li>For display, the math will be converted to MathML</li>        </ul>        <li>Editor will open a text box to edit Math.</li>      </ul>    </ul>    <p><img src="images/math-editing.png" alt="Math editing diagram" /></p>    <ul>      <li>Preview</li>      <ul>        <li>Will have PDF and Web Preview <br />        </li>      </ul>      <li>Imports</li>      <ul>        <li>User can import from the editor</li>        <ul>          <li>Word</li>          <li>LaTeX</li>          <li>HTML</li>          <li>CNXML</li>          <li>Zip file</li>        </ul>      </ul>      <li>Publish</li>      <ul>        <li>Should allow user to publish to Publish Repository</li>        <li>Publish should trigger generation of<br />        </li>        <ul>          <li>PDF</li>          <li>EPUB</li>          <li>Complete Zip</li>          <li>Export HTML</li>          <li>Export CNXML</li>        </ul>        <li>User should be able to see the status of the triggered events</li>      </ul>      <li>Authentication</li>      <ul>        <li>Users can access the editor without Authentication, but must login          to save their work</li>        <ul>          <li>This is restricted to new content</li>          <li>Users must login to see previously saved work.<br />          </li>        </ul>        <li>Users will be authenticated via the Authentication service<br />        </li>      </ul>    </ul>    <h3>Editor Page Design</h3>    <p>This is a series of rough mockups that describe how the different editor      features would work.<br />    </p>    <p><img src="images/editor-mockup.png" alt="Editor mockup" /></p>    <p>The Editor will have a Tools dropdown that has selections for several      Features.  Note: Feature names will most likely change.<br />    </p>    <ul>      <li>Import - opens the Import popup</li>      <li>PDF Preview - generates a PDF and downloads it</li>      <li>Web Preview - Opens another tab/window with a preview of the module</li>      <li>Publish - opens the Publish popup</li>      <li>Files - opens the Files popup</li>      <li>Roles - opens the Roles popup</li>      <li>Metadata - opens the Metadata popup</li>    </ul>    <p><img src="images/import-popup.png" alt="import popup" /></p>    <p>The Import popup allows the user to <br />    </p>    <ul>      <li>select the type of import</li>      <li>select the file to import</li>      <li>click the import button to import the file</li>    </ul>    Once the import is completed, the popup closes    <p><img src="images/publish-popup.png" alt="publish popup" /></p>    <p>The Publish popup will</p>    <ul>      <li>require the user to enter a description</li>      <li>have similar license text from the current publish tab</li>    </ul>    <p>Once the content is sent to the published repository, the user will be      sent to the Workspace view where they can see the status of the export      generation.</p>    <p>If a role request or something else is preventing publishing, the user      should be notified without opening the publish popup.<br />    </p>    <p><img src="images/add-files-popup.png" alt="Add files popup" /></p>    <p>The Files popup will</p>    <ul>      <li>Display any files already added to the module</li>      <li>allow the user to add files</li>      <li>add new files to the list at the top once they are uploaded</li>      <li>Allow the user to close the window when done.<br />      </li>    </ul>    <p><img src="images/roles-popup.png" alt="roles popup" /></p>    <p>The Roles popup will<br />    </p>    <ul>      <li>display current assigned roles</li>      <li>allow user to search for users by name or user id</li>      <li>allow the user to close the window when done.</li>      <li>display the status of each role request<br />      </li>    </ul>    <p>An alternative design would allow to set roles a role at a time with an      Add button.  This might be annoying when setting multiple roles on a user,      but how many users have multiple roles?</p>    <p><img src="images/metadata-popup.png" alt="metadata popup" /></p>    <p>The Metadata popup will</p>    <ul>      <li>have Add buttons that will expand the page to add another subject or        Keyword</li>      <li>allow the user to close the window when done.</li>    </ul>    <h4>Logging</h4>    <p>The Editor should log events such as</p>    <ul>      <li>Toolbar usage</li>      <li>Saving content</li>      <li>Usage of items from Tools dropdown</li>      <li>Button clicking on popups<br />      </li>    </ul>    <h3>Workspace</h3>    <ul>      <li>Should have a Google Drive (Docs) type display</li>    </ul>    <p><img src="images/workspace-mockup.png" alt="workspace mockup" /><br />    </p>    <ul>      <li>User can organize items via Folders</li>      <li>A Document (module or collection) can only be in one folder per user.</li>      <li>The same document can be in different folders for different users</li>      <li>The user can select all items in a folder and apply roles to the        selected items.</li>      <li>The user should be able to search their Workspace for a document or        folder.</li>      <li>Folders, module or collections can be created via the Add button</li>      <li>User can access the Roles and Metadata popups from the Workspace.</li>    </ul>    <h4>Logging</h4>    <p>Workspace should log events such as</p>    <ul>      <li>Creating new items</li>      <li>Accessing metadata</li>      <li>Accessing Roles</li>      <li>Deleting an item<br />      </li>    </ul>    <h3>Unpublished Repository</h3>    <p>The Unpublished Repository is used to store content and media until it is      published.  It has the following requirements.</p>    <ul>      <li>Store some content on the file system and some in a database</li>      <ul>        <li>Modules</li>        <ul>          <li>Store as HTML on file system</li>          <li>Path to file on file system will be stored in database</li>          <li>Metadata stored in file as MicroData</li>          <li>User ids only are stored in the metadata.  Other info in the            OpenID repository.</li>        </ul>        <li>Collections</li>        <ul>          <li>Store as HTML or JSon on file system</li>          <li>Path to file on file system will be stored in database</li>          <li>Metadata stored in file as MicroData</li>          <li>User ids only are stored in the metadata.  Other info in the            OpenID repository.</li>        </ul>        <li>My Stuff (Workspace)</li>        <ul>          <li>List of content</li>          <li>folders to filter content</li>          <li>Share content with others via applying roles<br />          </li>          <li>Store information in the database</li>        </ul>      </ul>      <li>Repository will have an API for performing CRUD operations</li>      <ul>        <li>API should log access via API<br />        </li>      </ul>    </ul>    <p><br />    </p>  </body></html>